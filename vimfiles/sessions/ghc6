let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Development/ghc/head/compiler/nativeGen
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 ~/Development/ghc/head/compiler/main/DriverPhases.hs
badd +1601 ~/Development/ghc/head/compiler/main/DriverPipeline.hs
badd +1 ~/Development/ghc/head/compiler/main/CodeOutput.lhs
badd +1 ~/Development/ghc/head/compiler/main/HscMain.lhs
badd +1 ~/Development/ghc/head/ghc/ghc.wrapper
badd +181 ~/Development/ghc/head/ghc/Main.hs
badd +76 ~/Development/Thesis/Part\ A/Report/report.tex
badd +144 ~/.vimrc
badd +82 ~/Development/ghc/head/docs/man/gen_flags.xsl.pl
badd +1 ~/Development/ghc/head/docs/man/Makefile
badd +50 ~/Development/ghc/head/docs/comm/the-beast/driver.html
badd +1 ~/Development/ghc/head/docs/comm/the-beast/main.html
badd +99 ~/Development/ghc/head/docs/comm/the-beast/ghci.html
badd +18 ~/Development/ghc/head/docs/comm/the-beast/alien.html
badd +25 ~/Development/ghc/head/docs/comm/the-beast/basicTypes.html
badd +108 ~/Development/ghc/head/docs/comm/the-beast/coding-style.html
badd +1 ~/Development/ghc/head/docs/comm/the-beast/data-types.html
badd +10 ~/Development/ghc/head/docs/comm/the-beast/desugar.html
badd +1 ~/Development/ghc/head/docs/comm/the-beast/fexport.html
badd +30 ~/Development/ghc/head/docs/comm/the-beast/mangler.html
badd +56 ~/Development/ghc/head/docs/comm/the-beast/modules.html
badd +56 ~/Development/ghc/head/docs/comm/the-beast/names.html
badd +749 ~/Development/ghc/head/docs/comm/the-beast/ncg.html
badd +383 ~/Development/ghc/head/ghc/GhciMonad.hs
badd +33 ~/Development/ghc/head/sync-all
badd +1 ~/Development/ghc/head/compiler/main/GHC.hs
badd +172 ~/.vim/syntax/haskell.vim
badd +323 ~/Development/ghc/head/compiler/main/ErrUtils.lhs
badd +1893 ~/Development/ghc/head/compiler/main/HscTypes.lhs
badd +28 ~/Development/Vim/vim_issues.txt
badd +1 ~/Development/Vim/vim_tips.txt
badd +14 ~/Development/Vim/vim_todo.txt
badd +30 ~/Development/ghc/head/compiler/prelude/primops.txt.pp
badd +1 ~/Development/ghc/head/compiler/utils/GraphColor.hs
badd +871 ~/Development/ghc/head/compiler/main/DynFlags.hs
badd +542 ~/Development/ghc/head/docs/coding-style.html
badd +60 ~/Development/ghc/head/libraries/base/Debug/Trace.hs
badd +36 ~/Development/ghc/head/compiler/main/SysTools.lhs
badd +83 ~/Development/ghc/head/compiler/codeGen/Bitmap.hs
badd +308 AsmCodeGen.lhs
badd +1 ~/Development/ghc/head/compiler/cmm/Cmm.hs
badd +242 ~/Development/ghc/head/compiler/cmm/CLabel.hs
badd +82 ~/Development/ghc/head/README
badd +32 ~/Development/ghc/head/HACKING
badd +3 ~/Development/ghc/head/MAKEHELP
badd +17 ~/Development/ghc/head/SUBMAKEHELP
badd +12 ~/Development/ghc/head/Makefile
badd +11 ~/Development/ghc/head/compiler/utils/BufWrite.hs
badd +439 ~/Development/ghc/head/compiler/utils/Outputable.lhs
badd +51 ~/Development/ghc/head/compiler/cmm/PprCmm.hs
badd +1066 ~/Development/ghc/head/compiler/utils/Pretty.lhs
badd +1 ~/Development/ghc/head/rts/StgCRun.c
badd +1 ~/Development/ghc/head/rts/StgRun.h
badd +239 ~/Development/ghc/head/rts/sm/GCThread.h
badd +308 ~/Development/ghc/head/includes/Regs.h
badd +945 ~/Development/ghc/head/ghc.mk
badd +55 ~/Development/ghc/head/compiler/simplStg/SRT.lhs
badd +6 ~/Development/ghc/head/compiler/simplStg/SimplStg.lhs
badd +12 ~/Development/ghc/head/compiler/simplStg/StgStats.lhs
badd +83 X86/Regs.hs
badd +36 Reg.hs
badd +107 ~/.vim/plugin/SyntaxFolds.vim
badd +39 ~/.vim/ftplugin/haskell/prettyunicode.vim
badd +112 ~/Development/ghc/head/compiler/basicTypes/UniqSupply.lhs
badd +230 ~/Development/ghc/head/includes/MachRegs.h
badd +476 ~/Development/ghc/build/compiler/nativeGen/X86/Regs.hs.E
badd +515 X86/Regs.hs.E
badd +1 compiler/main/GHC.hs
badd +1 compiler/main/HscMain.lhs
badd +1 compiler/main/CodeOutput.lhs
badd +1 compiler/main/DriverPipeline.hs
badd +1 ~/Development/ghc/head/compiler/cmm/CmmExpr.hs
badd +544 ~/Development/ghc/head/compiler/codeGen/CgUtils.hs
badd +1 ~/Development/ghc/head/compiler/cmm/README
badd +548 RegAlloc/Liveness.hs
badd +48 Instruction.hs
badd +248 X86/Instr.hs
badd +16 ~/Development/ghc/head/compiler/basicTypes/Unique.lhs
badd +45 NCGMonad.hs
badd +108 NCG.h
badd +1 NOTES
badd +30 TargetReg.hs
badd +101 Size.hs
badd +27 RegClass.hs
badd +1 PprBase.hs
badd +4 Platform.hs
badd +1 PIC.hs
badd +506 ~/Development/ghc/head/compiler/ghc.cabal.in
badd +1 main/CodeOutput.lhs
badd +1 main/SysTools.lhs
badd +190 ~/Development/ghc/head/compiler/main/CodeGen.hs
badd +118 ~/Development/ghc/head/compiler/main/Instr.hs
badd +1 ~/Development/ghc/head/compiler/utils/OrdList.lhs
badd +11 CodeGen/Base.hs
badd +90 ~/Development/ghc/head/compiler/main/Regs.hs
badd +1 ~/Development/ghc/head/compiler/main/Base.hs
badd +1 ~/Development/ghc/head/compiler/main/Imm.hs
badd +1 CodeGen/Expand.hs
badd +47 CodeGen/Gen32.hs
badd +3 CodeGen/Gen64.hs
badd +273 ~/Development/ghc/head/compiler/cmm/CmmCPS.hs
badd +0 SPARC/CodeGen.hs
badd +0 SPARC/CodeGen/Gen32.hs
badd +0 SPARC/CodeGen/Base.hs
badd +0 SPARC/Regs.hs
badd +1 SPARC/Instr.hs
badd +1 ~/.virmc
badd +31 ~/.gvimrc
badd +34 ~/Development/ghc/head/compiler/cmm/BlockId.hs
badd +1 ~/Development/ghc/head/compiler/cmm/CmmUtils.hs
badd +0 ~/Development/ghc/head/compiler/cmm/PprCmmZ.hs
badd +1 SPARC/Base.hs
badd +1 SPARC/Imm.hs
badd +0 ~/.vim/ftplugin/haskell/customsettings.vim
badd +0 SPARC/CodeGen/Sanity.hs
badd +0 SPARC/Ppr.hs
args ~/Development/ghc/head/[BufExplorer]
set lines=55 columns=182
edit AsmCodeGen.lhs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 92 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 89 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 235 - ((27 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
235
normal! 010l
lcd ~/Development/ghc/head
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/nativeGen/AsmCodeGen.lhs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 676 - ((26 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
676
normal! 0
lcd ~/Development/ghc/head
wincmd w
exe 'vert 1resize ' . ((&columns * 92 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 89 + 91) / 182)
tabedit ~/Development/ghc/head/compiler/nativeGen/SPARC/Ppr.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 49 - ((22 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
49
normal! 0
lcd ~/Development/ghc/head/compiler/nativeGen
tabedit ~/Development/ghc/head/compiler/utils/OrdList.lhs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 66 - ((37 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
66
normal! 0
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/nativeGen/SPARC/CodeGen.hs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 90 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 91 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 62 - ((22 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
62
normal! 033l
lcd ~/Development/ghc/head/compiler
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/nativeGen/SPARC/CodeGen.hs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 214 - ((25 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
214
normal! 0
lcd ~/Development/ghc/head/compiler
wincmd w
exe 'vert 1resize ' . ((&columns * 90 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 91 + 91) / 182)
tabedit ~/Development/ghc/head/compiler/nativeGen/Instruction.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 43 - ((21 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
43
normal! 0
lcd ~/Development/ghc/head/compiler/nativeGen
tabedit ~/Development/ghc/head/compiler/nativeGen/SPARC/CodeGen/Sanity.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 22 - ((11 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
22
normal! 0
lcd ~/Development/ghc/head/compiler/nativeGen
tabedit ~/Development/ghc/head/compiler/nativeGen/SPARC/CodeGen/Base.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 38 - ((21 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
38
normal! 013l
lcd ~/Development/ghc/head/compiler/nativeGen
tabedit ~/Development/ghc/head/compiler/nativeGen/SPARC/Instr.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 128 - ((43 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
128
normal! 0
lcd ~/Development/ghc/head/compiler/nativeGen
tabedit ~/Development/ghc/head/compiler/nativeGen/SPARC/CodeGen/Gen32.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 181 - ((18 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
181
normal! 0
lcd ~/Development/ghc/head/compiler/nativeGen/SPARC
tabedit ~/Development/ghc/head/compiler/nativeGen/SPARC/CodeGen/Base.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 92 - ((26 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
92
normal! 0
lcd ~/Development/ghc/head/compiler/nativeGen
tabedit ~/Development/ghc/head/compiler/nativeGen/SPARC/Regs.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 271 - ((28 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
271
normal! 05l
lcd ~/Development/ghc/head/compiler/nativeGen/SPARC
tabedit ~/Development/ghc/head/compiler/nativeGen/Reg.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 155 - ((30 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
155
normal! 03l
lcd ~/Development/ghc/head/compiler
tabedit ~/Development/ghc/head/compiler/nativeGen/SPARC/Instr.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 235 - ((49 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
235
normal! 0
lcd ~/Development/ghc/head/compiler/nativeGen
tabedit ~/Development/ghc/head/compiler/utils/OrdList.lhs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 61 - ((41 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
61
normal! 0
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/cmm/Cmm.hs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 89 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 92 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 95 - ((39 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
95
normal! 05l
lcd ~/Development/ghc/head
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/cmm/Cmm.hs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 107 - ((23 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
107
normal! 05l
lcd ~/Development/ghc/head
wincmd w
exe 'vert 1resize ' . ((&columns * 89 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 92 + 91) / 182)
tabedit ~/Development/ghc/head/compiler/cmm/CmmExpr.hs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 163 - ((24 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
163
normal! 05l
lcd ~/Development/ghc/head/compiler
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/cmm/CmmExpr.hs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 679 - ((49 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
679
normal! 0
lcd ~/Development/ghc/head/compiler
wincmd w
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
