let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Development/ghc/head/compiler
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 main/DriverPhases.hs
badd +1601 main/DriverPipeline.hs
badd +1 main/CodeOutput.lhs
badd +1 main/HscMain.lhs
badd +1 ~/Development/ghc/head/ghc/ghc.wrapper
badd +181 ~/Development/ghc/head/ghc/Main.hs
badd +76 ~/Development/Thesis/Part\ A/Report/report.tex
badd +84 ~/.vimrc
badd +82 ~/Development/ghc/head/docs/man/gen_flags.xsl.pl
badd +1 ~/Development/ghc/head/docs/man/Makefile
badd +50 ~/Development/ghc/head/docs/comm/the-beast/driver.html
badd +1 ~/Development/ghc/head/docs/comm/the-beast/main.html
badd +99 ~/Development/ghc/head/docs/comm/the-beast/ghci.html
badd +18 ~/Development/ghc/head/docs/comm/the-beast/alien.html
badd +25 ~/Development/ghc/head/docs/comm/the-beast/basicTypes.html
badd +108 ~/Development/ghc/head/docs/comm/the-beast/coding-style.html
badd +1 ~/Development/ghc/head/docs/comm/the-beast/data-types.html
badd +10 ~/Development/ghc/head/docs/comm/the-beast/desugar.html
badd +1 ~/Development/ghc/head/docs/comm/the-beast/fexport.html
badd +30 ~/Development/ghc/head/docs/comm/the-beast/mangler.html
badd +56 ~/Development/ghc/head/docs/comm/the-beast/modules.html
badd +56 ~/Development/ghc/head/docs/comm/the-beast/names.html
badd +749 ~/Development/ghc/head/docs/comm/the-beast/ncg.html
badd +383 ~/Development/ghc/head/ghc/GhciMonad.hs
badd +33 ~/Development/ghc/head/sync-all
badd +1 main/GHC.hs
badd +172 ~/.vim/syntax/haskell.vim
badd +323 main/ErrUtils.lhs
badd +1893 main/HscTypes.lhs
badd +28 ~/Development/Vim/vim_issues.txt
badd +1 ~/Development/Vim/vim_tips.txt
badd +14 ~/Development/Vim/vim_todo.txt
badd +30 prelude/primops.txt.pp
badd +1 utils/GraphColor.hs
badd +1 main/DynFlags.hs
badd +542 ~/Development/ghc/head/docs/coding-style.html
badd +60 ~/Development/ghc/head/libraries/base/Debug/Trace.hs
badd +1 main/SysTools.lhs
badd +83 codeGen/Bitmap.hs
badd +308 nativeGen/AsmCodeGen.lhs
badd +1 cmm/Cmm.hs
badd +358 cmm/CLabel.hs
badd +82 ~/Development/ghc/head/README
badd +32 ~/Development/ghc/head/HACKING
badd +3 ~/Development/ghc/head/MAKEHELP
badd +17 ~/Development/ghc/head/SUBMAKEHELP
badd +12 ~/Development/ghc/head/Makefile
badd +11 utils/BufWrite.hs
badd +439 utils/Outputable.lhs
badd +51 cmm/PprCmm.hs
badd +1066 utils/Pretty.lhs
badd +1 ~/Development/ghc/head/rts/StgCRun.c
badd +1 ~/Development/ghc/head/rts/StgRun.h
badd +239 ~/Development/ghc/head/rts/sm/GCThread.h
badd +308 ~/Development/ghc/head/includes/Regs.h
badd +945 ~/Development/ghc/head/ghc.mk
badd +55 simplStg/SRT.lhs
badd +6 simplStg/SimplStg.lhs
badd +1 simplStg/StgStats.lhs
badd +712 nativeGen/X86/Regs.hs
badd +215 nativeGen/Reg.hs
badd +107 ~/.vim/plugin/SyntaxFolds.vim
badd +39 ~/.vim/ftplugin/haskell/prettyunicode.vim
badd +198 basicTypes/UniqSupply.lhs
badd +230 ~/Development/ghc/head/includes/MachRegs.h
badd +476 ~/Development/ghc/build/compiler/nativeGen/X86/Regs.hs.E
badd +515 nativeGen/X86/Regs.hs.E
badd +0 compiler/main/GHC.hs
badd +0 compiler/main/HscMain.lhs
badd +1 compiler/main/CodeOutput.lhs
badd +0 compiler/main/DriverPipeline.hs
badd +0 cmm/CmmExpr.hs
badd +424 codeGen/CgUtils.hs
badd +0 cmm/README
badd +548 nativeGen/RegAlloc/Liveness.hs
badd +27 nativeGen/Instruction.hs
badd +0 nativeGen/X86/Instr.hs
badd +16 basicTypes/Unique.lhs
badd +0 nativeGen/NCGMonad.hs
badd +108 nativeGen/NCG.h
badd +1 nativeGen/NOTES
badd +30 nativeGen/TargetReg.hs
badd +101 nativeGen/Size.hs
badd +27 nativeGen/RegClass.hs
badd +1 nativeGen/PprBase.hs
badd +4 nativeGen/Platform.hs
badd +1 nativeGen/PIC.hs
badd +0 ghc.cabal.in
args ~/Development/ghc/head/[BufExplorer]
set lines=55 columns=182
edit main/CodeOutput.lhs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 16 - ((15 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
16
normal! 03l
tabedit main/SysTools.lhs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 87 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 94 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 384 - ((23 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
384
normal! 02l
lcd ~/Development/ghc/head
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/main/SysTools.lhs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 36 - ((9 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
36
normal! 0
lcd ~/Development/ghc/head
wincmd w
exe 'vert 1resize ' . ((&columns * 87 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 94 + 91) / 182)
tabedit ~/Development/ghc/head/compiler/ghc.cabal.in
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 506 - ((48 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
506
normal! 012l
lcd ~/Development/ghc/head/compiler
tabedit ~/Development/ghc/head/compiler/main/DynFlags.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 871 - ((40 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
871
normal! 013l
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/nativeGen/AsmCodeGen.lhs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 298 - ((19 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
298
normal! 06l
lcd ~/Development/ghc/head
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/nativeGen/AsmCodeGen.lhs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 686 - ((26 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
686
normal! 07l
lcd ~/Development/ghc/head
wincmd w
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
tabedit ~/Development/ghc/head/compiler/nativeGen/Instruction.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 133 - ((26 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
133
normal! 0
lcd ~/Development/ghc/head/compiler
tabedit ~/Development/ghc/head/compiler/nativeGen/NCGMonad.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 45 - ((3 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
45
normal! 02l
lcd ~/Development/ghc/head/compiler
tabedit ~/Development/ghc/head/compiler/basicTypes/UniqSupply.lhs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 112 - ((26 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
112
normal! 0
lcd ~/Development/ghc/head/compiler
tabedit ~/Development/ghc/head/compiler/basicTypes/Unique.lhs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 16 - ((15 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
16
normal! 0
lcd ~/Development/ghc/head/compiler
tabedit ~/Development/ghc/head/compiler/nativeGen/X86/Instr.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 248 - ((49 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
248
normal! 0
lcd ~/Development/ghc/head/compiler
tabedit ~/Development/ghc/head/compiler/cmm/Cmm.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 68 - ((15 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
68
normal! 05l
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/cmm/CmmExpr.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 454 - ((26 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
454
normal! 03l
lcd ~/Development/ghc/head/compiler
tabedit ~/Development/ghc/head/compiler/cmm/CLabel.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 362 - ((26 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
362
normal! 0
lcd ~/Development/ghc/head/compiler
tabedit ~/Development/ghc/head/compiler/nativeGen/X86/Regs.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 83 - ((26 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
83
normal! 0
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/codeGen/CgUtils.hs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 426 - ((23 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
426
normal! 022l
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/codeGen/CgUtils.hs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 544 - ((41 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
544
normal! 033l
wincmd w
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
tabedit ~/Development/ghc/head/compiler/nativeGen/Reg.hs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 76 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 105 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 120 - ((25 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
120
normal! 0
lcd ~/Development/ghc/head
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/nativeGen/Reg.hs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 36 - ((0 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
36
normal! 0
lcd ~/Development/ghc/head
wincmd w
exe 'vert 1resize ' . ((&columns * 76 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 105 + 91) / 182)
tabnext 3
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
