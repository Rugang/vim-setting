let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Development/ghc/head
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +14 ~/Development/LLVMTest/strucPtr.c
badd +17 ~/Development/LLVMTest/strucStr.ll
badd +1 ~/Development/LLVMTest/strucStr.bc
badd +105 ~/Development/ghc/res/fixed.cmm
badd +14 compiler/llvmGen/LlvmCodeGen.lhs
badd +218 compiler/nativeGen/SPARC/CodeGen.hs
badd +234 compiler/cmm/Cmm.hs
badd +701 compiler/cmm/PprC.hs
badd +481 compiler/nativeGen/SPARC/Ppr.hs
badd +345 compiler/cmm/CLabel.hs
badd +136 compiler/llvmGen/Llvm/Types.hs
badd +19 compiler/llvmGen/LlvmCodeGen/Data.hs
badd +108 compiler/nativeGen/AsmCodeGen.lhs
badd +14 compiler/utils/UniqSet.lhs
badd +43 compiler/llvmGen/LlvmCodeGen/Base.hs
badd +21 /tmp/ghc29953_0/ghc29953_0.bc
badd +1 ~/Development/ghc/res/current.ll
badd +24 ~/Development/ghc/res/current-1.ll
badd +33 compiler/llvmGen/LlvmCodeGen/Ppr.hs
badd +1 /tmp/ghc21908_0/ghc21908_0.bc
badd +32 /tmp/ghc4426_0/ghc4426_0.bc
badd +74 compiler/llvmGen/Llvm/AbsSyn.hs
badd +155 ~/Development/ghc/res/unreg-noE.c
badd +1940 ~/Development/ghc/res/unreg.c
badd +4 ~/Development/ghc/res/unreg.s
badd +2087 ~/Development/ghc/res/reg.c
badd +210 ~/Development/ghc/res/reg-marked.s
badd +241 compiler/llvmGen/Llvm/PpLlvm.hs
badd +32 /tmp/ghc19266_0/ghc19266_0.bc
badd +30 compiler/llvmGen/Llvm.hs
badd +37 /tmp/ghc24532_0/ghc24532_0.bc
badd +17 /tmp/ghc30369_0/ghc30369_0.bc
badd +54 /tmp/ghc30369_0/ghc30369_0.bc.s
badd +33 /tmp/ghc2559_0/ghc2559_0.bc
badd +17 /tmp/ghc10724_0/ghc10724_0.bc
badd +41 ~/Development/ghc/res/object-comp.txt
badd +109 /tmp/ghc10724_0/ghc10724_0.bc.s
badd +1 /tmp/ghc10724_0/ghc10724_0.bc.bc
badd +10 /tmp/ghc28204_0/ghc28204_0.bc
badd +38 /tmp/ghc28204_0/ghc28204_0.bc.s
badd +43 /tmp/ghc16336_0/ghc16336_0.bc
badd +1 compiler/llvmGen/NOTES.t
badd +1 compiler/NOTES
badd +21 compiler/llvmGen/NOTES
badd +1 compiler/nativeGen/SPARC/Base.hs
badd +163 compiler/nativeGen/SPARC/Instr.hs
badd +41 compiler/nativeGen/SPARC/CodeGen/Sanity.hs
badd +71 compiler/llvmGen/LlvmCodeGen/CodeGen.hs
badd +545 compiler/ghc.cabal.in
badd +92 compiler/nativeGen/NCGMonad.hs
badd +3 compiler/nativeGen/SPARC/CodeGen/Gen64.hs
badd +55 compiler/nativeGen/SPARC/CodeGen/Gen32.hs
badd +160 compiler/nativeGen/SPARC/CodeGen/Expand.hs
badd +81 compiler/nativeGen/SPARC/CodeGen/CondCode.hs
badd +86 compiler/nativeGen/SPARC/CodeGen/CCall.hs
badd +698 compiler/cmm/CmmExpr.hs
badd +266 compiler/nativeGen/X86/CodeGen.hs
badd +48 compiler/nativeGen/Instruction.hs
badd +33 compiler/utils/OrdList.lhs
badd +1 compiler/nativeGen/SPARC/AddrMode.hs
badd +1 compiler/nativeGen/SPARC/Cond.hs
badd +58 compiler/nativeGen/SPARC/Imm.hs
badd +1 compiler/nativeGen/SPARC/Regs.hs
badd +29 compiler/nativeGen/SPARC/CodeGen/Amode.hs
badd +105 compiler/nativeGen/SPARC/CodeGen/Base.hs
badd +1 compiler/nativeGen/SPARC/RegPlate.hs
badd +153 compiler/nativeGen/Reg.hs
badd +0 compiler/main/DriverPipeline.hs
badd +0 compiler/main/DriverPhases.hs
badd +22 compiler/main/SysTools.lhs
badd +438 compiler/main/DynFlags.hs
silent! argdel *
set lines=55 columns=182
edit compiler/llvmGen/LlvmCodeGen.lhs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 3 - ((2 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
3
normal! 0
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/llvmGen/NOTES
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 50 - ((40 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
50
normal! 0
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/llvmGen/LlvmCodeGen/CodeGen.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 598 - ((28 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
598
normal! 035l
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/llvmGen/Llvm/Types.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 40 - ((13 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
40
normal! 0
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/nativeGen/SPARC/CodeGen.hs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 92 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 89 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 273 - ((34 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
273
normal! 02l
lcd ~/Development/ghc/head
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/nativeGen/SPARC/CodeGen.hs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 218 - ((31 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
218
normal! 018l
lcd ~/Development/ghc/head
wincmd w
exe 'vert 1resize ' . ((&columns * 92 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 89 + 91) / 182)
tabedit ~/Development/ghc/head/compiler/nativeGen/SPARC/CodeGen/Gen32.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 55 - ((15 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
55
normal! 0
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/cmm/PprC.hs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 203 - ((20 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
203
normal! 026l
lcd ~/Development/ghc/head
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/cmm/PprC.hs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 701 - ((26 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
701
normal! 027l
lcd ~/Development/ghc/head
wincmd w
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
tabedit ~/Development/ghc/head/compiler/cmm/Cmm.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 234 - ((30 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
234
normal! 0
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/cmm/CmmExpr.hs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 69 - ((27 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
69
normal! 017l
lcd ~/Development/ghc/head
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/cmm/CmmExpr.hs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 698 - ((46 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
698
normal! 02l
lcd ~/Development/ghc/head
wincmd w
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
tabedit ~/Development/ghc/head/compiler/main/DriverPipeline.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 1256 - ((36 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1256
normal! 0584l
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/main/DynFlags.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 1599 - ((49 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1599
normal! 019l
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/main/DriverPhases.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 186 - ((42 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
186
normal! 012l
lcd ~/Development/ghc/head
tabnext 2
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
