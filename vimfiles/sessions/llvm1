let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +13 compiler/llvmGen/LLVM.lhs
badd +96 compiler/llvmGen/LlvmCodeGen.lhs
badd +9 compiler/codeGen/CgTailCall.lhs
badd +0 compiler/codeGen/CgCase.lhs
badd +4 compiler/basicTypes/BasicTypes.lhs
badd +10 compiler/basicTypes/Module.lhs
badd +62 compiler/basicTypes/UniqSupply.lhs
badd +1 compiler/basicTypes/SrcLoc.lhs
badd +3 compiler/basicTypes/Id.lhs
badd +4 compiler/basicTypes/Literal.lhs
badd +1 compiler/basicTypes/DataCon.lhs
badd +11 ~/.vim/syntax/lhaskell.vim
badd +172 ~/.vim/syntax/haskell.vim
badd +1 ~/.vim/ftplugin/haskell/customsettings.vim
badd +6 ~/.vim/ftplugin/lhaskell/customsettings.vim
badd +730 compiler/nativeGen/AsmCodeGen.lhs
badd +19 compiler/llvmGen/LLVM.hs
badd +0 compiler/cmm/Cmm.hs
badd +205 compiler/llvmGen/LLVM/AbsSyn.hs
badd +8 compiler/nativeGen/SPARC/Base.hs
badd +0 compiler/cmm/CmmExpr.hs
badd +7 compiler/llvmGen/LLVM/Pretty.hs
badd +220 ~/Development/builds/EHC-releases-1.0.1/src/ehc/LLVM/AbsSyn.cag
badd +2 compiler/llvmGen/LLVM/Types.hs
badd +548 compiler/ghc.cabal.in
badd +37 compiler/nativeGen/PprBase.hs
badd +12 compiler/utils/Outputable.lhs
badd +21 ~/Development/builds/EHC-releases-1.0.1/src/ehc/EH/Pretty.cag
badd +23 ~/Development/builds/EHC-releases-1.0.1/src/ehc/EH/PrettyAST.cag
badd +300 compiler/ghc.mk
badd +0 compiler/nativeGen/SPARC/CodeGen.hs
badd +13 compiler/llvmGen/Llvm.hs
badd +1 compiler/llvmGen/Llvm
badd +81 compiler/llvmGen/Llvm/Types.hs
badd +30 compiler/llvmGen/Llvm/AbsSyn.hs
badd +0 compiler/llvmGen/Ll
badd +93 compiler/llvmGen/Llvm/Pretty.hs
badd +4 compiler/llvmGen/TestModule222.hs
badd +134 compiler/utils/Pretty.lhs
badd +279 compiler/nativeGen/SPARC/Ppr.hs
badd +83 compiler/main/CodeOutput.lhs
badd +44 compiler/nativeGen/Instruction.hs
badd +0 compiler/llvmGen/Llvm/PprLlvm.hs
badd +1 compiler/llvmGen/Llvm/PpLlvm.hs
badd +0 includes/Regs.h
badd +217 includes/MachRegs.h
badd +22 compiler/llvmGen/Regs.hs
badd +227 compiler/nativeGen/SPARC/Regs.hs
badd +429 compiler/codeGen/CgUtils.hs
badd +733 compiler/nativeGen/X86/Regs.hs
badd +617 compiler/nativeGen/PPC/Regs.hs
badd +80 compiler/nativeGen/Alpha/Regs.hs
badd +93 compiler/nativeGen/PPC/Instr.hs
badd +155 compiler/nativeGen/Reg.hs
badd +1 compiler/nativeGen/RegClass.hs
badd +1 compiler/nativeGen/Alpha/RegInfo.hs
badd +1 compiler/nativeGen/Alpha/Ppr.hs-old
badd +1 compiler/nativeGen/Alpha/Instr.hs
badd +1 compiler/nativeGen/Alpha/CodeGen.hs
badd +44 includes/Stg.h
badd +22 compiler/llvmGen/LlvmCodeGen/Regs.hs
badd +18 compiler/llvmGen/LlvmCodeGen/Base.hs
badd +331 compiler/main/ErrUtils.lhs
badd +118 compiler/nativeGen/PIC.hs
badd +1 compiler/main/ErrUtils.lhs-boot
badd +14 compiler/utils/FastString.lhs
badd +727 compiler/main/HscMain.lhs
badd +1226 compiler/main/DriverPipeline.hs
silent! argdel *
set lines=55 columns=182
edit compiler/llvmGen/LlvmCodeGen.lhs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 98 - ((26 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
98
normal! 024l
lcd ~/Development/ghc/head
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/llvmGen/LlvmCodeGen.lhs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 2 - ((1 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
2
normal! 0
lcd ~/Development/ghc/head
wincmd w
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
tabedit ~/Development/ghc/head/compiler/llvmGen/LlvmCodeGen/Base.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 23 - ((22 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
23
normal! 0
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/cmm/Cmm.hs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 78 - ((26 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
78
normal! 05l
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/cmm/CmmExpr.hs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 114 - ((28 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
114
normal! 08l
lcd ~/Development/ghc/head
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/cmm/CmmExpr.hs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 1 - ((0 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
lcd ~/Development/ghc/head
wincmd w
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
tabedit ~/Development/ghc/head/includes/Regs.h
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
25
normal zo
58
normal zo
let s:l = 126 - ((17 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
126
normal! 04l
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/nativeGen/AsmCodeGen.lhs
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 291 - ((26 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
291
normal! 01l
lcd ~/Development/ghc/head
wincmd w
argglobal
edit ~/Development/ghc/head/compiler/nativeGen/AsmCodeGen.lhs
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 548 - ((29 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
548
normal! 0
lcd ~/Development/ghc/head
wincmd w
exe 'vert 1resize ' . ((&columns * 91 + 91) / 182)
exe 'vert 2resize ' . ((&columns * 90 + 91) / 182)
tabedit ~/Development/ghc/head/compiler/main/CodeOutput.lhs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 199 - ((39 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
199
normal! 04l
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/utils/Outputable.lhs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 742 - ((27 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
742
normal! 0
lcd ~/Development/ghc/head
tabedit ~/Development/ghc/head/compiler/main/ErrUtils.lhs
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 327 - ((48 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
327
normal! 0
lcd ~/Development/ghc/head
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
